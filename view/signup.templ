package view

import (
	"net/url"

	"github.com/murtaza-u/account/view/partial/icon"
)

type SignUpParams struct {
	Email           string `form:"email"`
	Password        string `form:"password"`
	ConfirmPassword string `form:"confirm_password"`
	ReturnTo        string
}

templ SignUpForm(values SignUpParams, err map[string]error) {
	<div class="w-full lg:w-1/2 bg-base-100">
		<form
			class="block w-full mx-auto lg:w-4/5 space-y-2"
			action={ templ.URL(signupWithReturnTo(values.ReturnTo)) }
			method="post"
			hx-boost="true"
			hx-indicator="#spinner"
		>
			<label class="form-control w-full">
				<div class="label">
					<span class="label-text">E-Mail</span>
					<span class="label-text-alt text-error text-xl">*</span>
				</div>
				<input
					required
					name="email"
					type="email"
					maxlength="50"
					value={ values.Email }
					placeholder="Eg: foo.bar@example.com"
					class={
						"input input-bordered w-full",
						templ.KV("input-error", err["email"] != nil),
					}
				/>
				<div class="label">
					if err["email"] != nil {
						<span class="label-text-alt text-error first-letter:uppercase">
							{ err["email"].Error() }
						</span>
					}
					<span class="label-text-alt">Must be less than 50 characters</span>
				</div>
			</label>
			<label class="form-control w-full">
				<div class="label">
					<span class="label-text">Password</span>
					<span class="label-text-alt text-error text-xl">*</span>
				</div>
				<input
					required
					name="password"
					type="password"
					minlength="8"
					maxlength="70"
					value={ values.Password }
					placeholder="********"
					class={
						"input input-bordered w-full",
						templ.KV("input-error", err["password"] != nil),
					}
				/>
				<div class="label">
					if err["password"] != nil {
						<span class="label-text-alt text-error first-letter:uppercase">
							{ err["password"].Error() }
						</span>
					}
					<span class="label-text-alt">Must be less than 70 characters</span>
				</div>
			</label>
			<label class="form-control w-full">
				<div class="label">
					<span class="label-text">Confirm Password</span>
					<span class="label-text-alt text-error text-xl">*</span>
				</div>
				<input
					required
					name="confirm_password"
					type="password"
					minlength="8"
					maxlength="70"
					value={ values.ConfirmPassword }
					placeholder="********"
					class={
						"input input-bordered w-full",
						templ.KV("input-error", err["confirm_password"] != nil),
					}
				/>
				<div class="label">
					if err["confirm_password"] != nil {
						<span class="label-text-alt text-error first-letter:uppercase">
							{ err["confirm_password"].Error() }
						</span>
					}
					<span class="label-text-alt">Must be same as above</span>
				</div>
			</label>
			<div class="flex items-center justify-end">
				<button class="my-4 btn btn-primary w-full md:w-fit">
					Sign Up
					<span
						id="spinner"
						class="ml-1 hidden loading loading-spinner"
					></span>
				</button>
			</div>
			<div class="text-sm text-center">
				Already have an account?
				<a href="/login" class="link link-primary">Login</a>
			</div>
		</form>
	</div>
}

templ SignUp(values SignUpParams, err map[string]error) {
	<main class="min-h-screen flex flex-col justify-center items-center mx-3 lg:mx-3 lg:flex-row lg:justify-evenly">
		@SignUpForm(values, err)
		<div class="divider my-8 lg:my-0 lg:divider-horizontal">OR</div>
		<div class="w-full flex flex-col items-center justify-center space-y-2 space-x-0 lg:space-x-2 lg:space-y-0 lg:flex-row lg:w-1/2">
			<a
				href={ templ.URL(githubLoginWithReturnTo(values.ReturnTo)) }
				class="w-full md:w-fit btn bg-[#323232] hover:bg-black text-white tracking-wide"
			>
				<span class="mr-0.5">
					@icon.Github()
				</span>
				Sign in with GitHub
			</a>
			<a
				href={ templ.URL(googleLoginWithReturnTo(values.ReturnTo)) }
				class="w-full md:w-fit  btn bg-[#db4a39] hover:bg-[#b80f08] text-white tracking-wide"
			>
				<span class="mr-0.5">
					@icon.Google()
				</span>
				Sign in with Google
			</a>
		</div>
	</main>
}

func signupWithReturnTo(returnTo string) string {
	if returnTo == "" {
		return "/signup"
	}
	return "/signup?return_to=" + url.QueryEscape(returnTo)
}
